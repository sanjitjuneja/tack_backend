version: '3.8'

services:
  postgres:
    image: postgres:14.4-alpine
    container_name: 'postgres'
    restart: always
    volumes:
      - ./database:/var/lib/postgresql
    env_file:
      - tackapp/local.env
    ports:
      - "5432:5432"

  nginx:
    container_name: 'nginx'
    restart: always
    build: ./nginx
    env_file:
      - tackapp/local.env
    ports:
      - "80:80"
    depends_on:
      - web

  web:
    container_name: 'web'
    build: .
    restart: always
    entrypoint: ["/app/docker-entrypoint.sh"]
    volumes:
      - .:/app/
    env_file:
      - tackapp/local.env
    command: ["python3", "manage.py", "runserver", "0.0.0.0:8000"]
#    command: ["daphne", "-b", "0.0.0.0", "-p", "8000", "tackapp.asgi:application"]
    depends_on:
      - postgres

  celery:
    build: .
    container_name: 'celery'
    restart: always
    command: celery -A tackapp worker --loglevel=info --logfile=celery.log
    env_file:
      - tackapp/local.env
    depends_on:
      - web
#      - rabbit

  celery-beat:
    build: .
    container_name: 'celery-beat'
    restart: always
    command: celery -A tackapp beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - tackapp/local.env
    depends_on:
      - web
#      - rabbit

  redis:
    container_name: 'redis'
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"

#  rabbit:
#    container_name: 'rabbit'
#    build: ./rabbitmq
#    restart: always
#    env_file:
#      - tackapp/local.env
#    ports:
#      - "15672:15672"

#  flower:
#    build: .
#    container_name: 'flower'
#    restart: always
#    command: celery -A tackapp --broker=redis://redis:6379/0 flower --port=5555
#    ports:
#      - "5555:5555"
#    env_file:
#      - tackapp/local.env
#    depends_on:
#      - web
#      - redis
#      - celery
