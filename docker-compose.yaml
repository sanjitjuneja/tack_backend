version: '3.8'

services:
  web:
    container_name: 'web'
    build: .
    restart: always
    entrypoint: ["/app/docker-entrypoint.sh"]
    volumes:
      - static_volume:/app/tackapp/staticfiles
      - media_volume:/app/tackapp/media
    command: ["gunicorn", "tackapp.wsgi:application", "--bind", "0.0.0.0:8000"]
    expose:
      - 8000
#    ports:
#      - "80:80"
    depends_on:
      - postgres

  postgres:
    image: postgres:14.4-alpine
    container_name: 'postgres'
    restart: always
    env_file:
      - tackapp/.env
#    ports:
#      - "5432:5432"

  nginx:
    container_name: 'nginx'
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/tackapp/staticfiles
      - media_volume:/app/tackapp/media
    depends_on:
      - web

  celery:
    build: .
    container_name: 'celery'
    command: celery -A tackapp worker --loglevel=info --logfile=celery.log
#    volumes:
#      - .:/app/
    env_file:
      - tackapp/.env
    depends_on:
      - web
      - redis

  redis:
    container_name: 'redis'
    image: redis:7-alpine

  flower:
    build: .
    container_name: 'flower'
    command: celery -A tackapp --broker=redis://redis:6379/0 flower --port=443
#    ports:
#      - "443:443"
    env_file:
      - tackapp/.env
    depends_on:
      - web
      - redis
      - celery
      - postgres

volumes:
  static_volume:
  media_volume: