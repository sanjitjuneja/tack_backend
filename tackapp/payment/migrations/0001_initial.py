# Generated by Django 4.0.7 on 2022-09-02 07:57

import core.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('djstripe', '0011_alter_invoiceitem_tax_rates_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usd_balance', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(99999999)])),
                ('stripe_user', models.CharField(max_length=64)),
                ('dwolla_user', models.CharField(blank=True, default=None, max_length=64, null=True)),
                ('dwolla_access_token', models.CharField(blank=True, default=None, max_length=128, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bank Account',
                'verbose_name_plural': 'Bank Accounts',
                'db_table': 'bank_account',
            },
        ),
        migrations.CreateModel(
            name='DwollaRemovedAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dwolla_id', models.UUIDField()),
            ],
            options={
                'verbose_name': 'Dwolla removed account',
                'verbose_name_plural': 'Dwolla removed accounts',
                'db_table': 'dwolla_removed_accounts',
            },
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fee_percent', models.DecimalField(decimal_places=2, default=3.0, max_digits=4, validators=[core.validators.percent_validator])),
                ('fee_min', models.PositiveIntegerField(default=25)),
                ('fee_max', models.PositiveIntegerField(default=1500)),
            ],
            options={
                'verbose_name': 'Fee',
                'verbose_name_plural': 'Fees',
                'db_table': 'fees',
            },
        ),
        migrations.CreateModel(
            name='UserPaymentMethods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dwolla_payment_method', models.CharField(max_length=64)),
                ('is_primary', models.BooleanField(default=False)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payment.bankaccount')),
            ],
            options={
                'verbose_name': 'Payment method',
                'verbose_name_plural': 'Payment methods',
                'db_table': 'payment_methods',
            },
        ),
        migrations.CreateModel(
            name='StripePaymentMethodsHolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_primary', models.BooleanField(default=False)),
                ('stripe_pm', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='djstripe.paymentmethod')),
            ],
            options={
                'verbose_name': 'Stripe Payment method holder',
                'verbose_name_plural': 'Stripe Payment methods holder',
                'db_table': 'stripe_pm_holder',
            },
        ),
        migrations.AddConstraint(
            model_name='userpaymentmethods',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('bank_account',), name='bank_account_one_primary'),
        ),
    ]
